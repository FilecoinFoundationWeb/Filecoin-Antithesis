diff --git a/chain/exchange/client.go b/chain/exchange/client.go
index 9cbb44955..9992d11d3 100644
--- a/chain/exchange/client.go
+++ b/chain/exchange/client.go
@@ -284,18 +284,16 @@ func (c *client) validateCompressedIndices(chain []*BSTipSet) error {
 				len(msgs.SecpkIncludes), blocksNum)
 		}
 
-		blsLen := uint64(len(msgs.Bls))
-		secpLen := uint64(len(msgs.Secpk))
 		for blockIdx := 0; blockIdx < blocksNum; blockIdx++ {
 			for _, mi := range msgs.BlsIncludes[blockIdx] {
-				if mi >= blsLen {
+				if int(mi) >= len(msgs.Bls) {
 					return xerrors.Errorf("index in BlsIncludes (%d) exceeds number of messages (%d)",
 						mi, len(msgs.Bls))
 				}
 			}
 
 			for _, mi := range msgs.SecpkIncludes[blockIdx] {
-				if mi >= secpLen {
+				if int(mi) >= len(msgs.Secpk) {
 					return xerrors.Errorf("index in SecpkIncludes (%d) exceeds number of messages (%d)",
 						mi, len(msgs.Secpk))
 				}
@@ -317,36 +315,18 @@ func (c *client) GetBlocks(ctx context.Context, tsk types.TipSetKey, count int)
 		)
 	}
 
-	var ret []*types.TipSet
-	start := tsk.Cids()
-	for len(ret) < count {
-		req := &Request{
-			Head:    start,
-			Length:  uint64(count - len(ret)),
-			Options: Headers,
-		}
-
-		validRes, err := c.doRequest(ctx, req, nil, nil)
-		if err != nil {
-			return nil, xerrors.Errorf("failed to doRequest: %w", err)
-		}
-
-		if len(validRes.tipsets) == 0 {
-			return nil, xerrors.Errorf("doRequest fetched zero tipsets: %w", err)
-		}
-
-		ret = append(ret, validRes.tipsets...)
-
-		last := validRes.tipsets[len(validRes.tipsets)-1]
-		if last.Height() <= 1 {
-			// we've walked all the way up to genesis, return
-			break
-		}
+	req := &Request{
+		Head:    tsk.Cids(),
+		Length:  uint64(count),
+		Options: Headers,
+	}
 
-		start = last.Parents().Cids()
+	validRes, err := c.doRequest(ctx, req, nil, nil)
+	if err != nil {
+		return nil, err
 	}
 
-	return ret, nil
+	return validRes.tipsets, nil
 }
 
 // GetFullTipSet implements Client.GetFullTipSet(). Refer to the godocs there.
@@ -361,16 +341,10 @@ func (c *client) GetFullTipSet(ctx context.Context, peer peer.ID, tsk types.TipS
 
 	validRes, err := c.doRequest(ctx, req, &peer, nil)
 	if err != nil {
-		return nil, xerrors.Errorf("failed to doRequest: %w", err)
-	}
-
-	fullTipsets := validRes.toFullTipSets()
-
-	if len(fullTipsets) == 0 {
-		return nil, xerrors.New("unexpectedly got no tipsets in exchange")
+		return nil, err
 	}
 
-	return fullTipsets[0], nil
+	return validRes.toFullTipSets()[0], nil
 }
 
 // GetChainMessages implements Client.GetChainMessages(). Refer to the godocs there.
