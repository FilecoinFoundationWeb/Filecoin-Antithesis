--- a/build/buildconstants/drand.go	2024-09-03 11:45:57
+++ b/build/buildconstants/drand.go	2024-09-03 14:57:41
@@ -1,6 +1,7 @@
 package buildconstants
 
 import (
+	"os"
 	"sort"
 
 	"github.com/filecoin-project/go-state-types/abi"
@@ -17,6 +18,12 @@
 	DrandQuicknet
 )
 
+func getDrandChainInfo() string {
+	b, _ := os.ReadFile(os.Getenv("DRAND_CHAIN_INFO"))
+	str := string(b)
+	return str
+}
+
 type DrandConfig struct {
 	Servers       []string
 	Relays        []string
@@ -32,19 +39,13 @@
 var DrandConfigs = map[DrandEnum]DrandConfig{
 	DrandQuicknet: {
 		Servers: []string{
-			"https://api.drand.sh",
-			"https://api2.drand.sh",
-			"https://api3.drand.sh",
-			"https://drand.cloudflare.com",
-			"https://api.drand.secureweb3.com:6875", // Storswift
+			"http://10.20.20.21",
+			"http://10.20.20.22",
+			"http://10.20.20.23", // Storswift
 		},
-		Relays: []string{
-			"/dnsaddr/api.drand.sh/",
-			"/dnsaddr/api2.drand.sh/",
-			"/dnsaddr/api3.drand.sh/",
-		},
+		Relays:        []string{},
 		IsChained:     false,
-		ChainInfoJSON: `{"public_key":"83cf0f2896adee7eb8b5f01fcad3912212c437e0073e911fb90022d3e760183c8c4b450b6a0a6c3ac6a5776a2d1064510d1fec758c921cc22b0e17e63aaf4bcb5ed66304de9cf809bd274ca73bab4af5a6e9c76a4bc09e76eae8991ef5ece45a","period":3,"genesis_time":1692803367,"hash":"52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971","groupHash":"f477d5c89f21a17c863a7f937c6a6d15859414d2be09cd448d4279af331c5d3e","schemeID":"bls-unchained-g1-rfc9380","metadata":{"beaconID":"quicknet"}}`,
+		ChainInfoJSON: getDrandChainInfo(),
 	},
 	DrandTestnet: {
 		Servers: []string{
--- a/node/hello/hello.go	2025-03-19 13:54:54
+++ b/node/hello/hello.go	2025-03-27 16:59:55
@@ -77,7 +77,7 @@
 	if err := cborutil.ReadCborRPC(s, &hmsg); err != nil {
 		_ = s.SetReadDeadline(time.Time{})
 		log.Infow("failed to read hello message, disconnecting", "error", err)
-		_ = s.Conn().Close()
+		_ = s.Close()
 		return
 	}
 	_ = s.SetReadDeadline(time.Time{})
@@ -91,7 +91,7 @@
 
 	if hmsg.GenesisHash != hs.syncer.Genesis.Cids()[0] {
 		log.Debugf("other peer has different genesis! (%s)", hmsg.GenesisHash)
-		_ = s.Conn().Close()
+		_ = s.Close()
 		return
 	}
 	go func() {
--- a/build/buildconstants/f3manifest_2k.json
+++ b/build/buildconstants/f3manifest_2k.json
@@ -2,7 +2,7 @@
   "Pause": false,
   "ProtocolVersion": 7,
   "InitialInstance": 0,
-  "BootstrapEpoch": 1000,
+  "BootstrapEpoch": 5,
   "NetworkName": "2k",
   "ExplicitPower": null,
   "IgnoreECPower": false,
@@ -22,7 +22,7 @@
   },
   "EC": {
     "Period": 4000000000,
-    "Finality": 900,
+    "Finality": 2,
     "DelayMultiplier": 2,
     "BaseDecisionBackoffTable": [1.3, 1.69, 2.2, 2.86, 3.71, 4.83, 6.27, 7.5],
     "HeadLookback": 4,
	 
